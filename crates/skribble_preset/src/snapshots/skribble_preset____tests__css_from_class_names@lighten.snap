---
source: crates/skribble_preset/src/__tests.rs
expression: classes.to_skribble_css(runner_config)?
---
/* Generated by Skribble */
@charset "utf-8";
@layer base, alias, default, priority-class;
@property --sk-s-hue {
  syntax: "<number> | <angle>";
  inherits: true;
  initial-value: 314;
}
@property --sk-s-saturation {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 100%;
}
@property --sk-s-lightness {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 47.058823%;
}
@property --sk-s-alpha {
  syntax: "<number> | <percentage>";
  inherits: true;
  initial-value: 1;
}
@property --sk-s {
  syntax: "<color>";
  inherits: true;
  initial-value: hsl(314 100% 47.058823%);
}
@property --sk-p-hue {
  syntax: "<number> | <angle>";
  inherits: true;
  initial-value: 258.89362;
}
@property --sk-p-saturation {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 94.37751%;
}
@property --sk-p-lightness {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 51.17647%;
}
@property --sk-p-alpha {
  syntax: "<number> | <percentage>";
  inherits: true;
  initial-value: 1;
}
@property --sk-p {
  syntax: "<color>";
  inherits: true;
  initial-value: hsl(258.89362 94.37751% 51.17647%);
}
@layer default {
  :root {
    --sk-s-hue: 314;
    --sk-s-saturation: 100%;
    --sk-s-lightness: 47.058823%;
    --sk-s-alpha: 1;
    --sk-s: hsl(314 100% 47.058823%);
    --sk-p-hue: 258.89362;
    --sk-p-saturation: 94.37751%;
    --sk-p-lightness: 51.17647%;
    --sk-p-alpha: 1;
    --sk-p: hsl(258.89362 94.37751% 51.17647%);
  }
  .\(lighten\=5%\)\:bg\:\$pink900 {
    background-color: hsl(335.88785 69.032265% clamp(calc(30.392159% + 5%), 0%, 100%));
  }
  .\(lighten\=50%\)\:bg\:\$secondary {
    background-color: hsl(var(--sk-s-hue) var(--sk-s-saturation) clamp(calc(var(--sk-s-lightness) + 50%), 0%, 100%) / var(--sk-s-alpha));
  }
  .\(lighten\=\=005\)\:bg\:\$red100 {
    background-color: hsl(0 93.333336% clamp(calc(94.117645% + 5%), 0%, 100%));
  }
  .\(lighten\=\=050\)\:bg\:\$primary {
    background-color: hsl(var(--sk-p-hue) var(--sk-p-saturation) clamp(calc(var(--sk-p-lightness) + 50%), 0%, 100%) / var(--sk-p-alpha));
  }
}

